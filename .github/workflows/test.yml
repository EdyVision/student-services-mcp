name: Test

on:
  # Triggers the test workflow on push for all branches
  push:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  unit-tests:
    name: Run Unit Tests
    strategy:
      matrix:
        python-version: [ "3.13" ]
    runs-on: ubuntu-latest

    # Checkout the code, install uv, install dependencies,
    # and run test with coverage
    steps:
      - name: Environment Setup
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.13
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - name: Test with python ${{ matrix.python-version }}
        run: uv sync
      - name: Install pytest and coverage
        run: uv pip install pytest coverage
      - name: Run Tests
        run: |
          make test.coverage

  docker:
    name: Run Docker Test
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build -t student-services-demo-mcp .

      - name: Run container
        run: |
          docker run -d -p 7860:7860 --name student-services-demo-mcp student-services-demo-mcp
          sleep 10  # Wait for the service to start

      - name: Test container health
        run: |
          # Test if the service is accessible
          curl -f http://localhost:7860/ || exit 1
          # Test if the MCP endpoint is accessible
          curl -f http://localhost:7860/mcp || exit 1

      - name: Clean up
        if: always()
        run: |
          docker stop student-services-demo-mcp || true
          docker rm student-services-demo-mcp || true
